name: Rapid Response E2E Tests

on:
  push:
    branches: [ main, add-e2e-tests ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v5

      - name: Setup Go
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v6
        with:
          go-version: '1.23.x'

      - name: Setup Node.js
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v6
        with:
          node-version: 22
          cache: 'yarn'
          cache-dependency-path: ui/pages/rapid-response-react/yarn.lock

      - name: Install Go dependencies
        run: |
          cd functions/Func_Jobs
          go get .
          cd ../job_history
          go get .

      - name: Build Go functions
        run: |
          go build -C functions/Func_Jobs
          go build -C functions/job_history

      - name: Install React dependencies
        uses: borales/actions-yarn@2a18ac083c150a32c8ae27a3d68fc8f77b2ad4be # v5
        with:
          cmd: install
          dir: ui/pages/rapid-response-react

      - name: Build React app
        uses: borales/actions-yarn@2a18ac083c150a32c8ae27a3d68fc8f77b2ad4be # v5
        with:
          cmd: build
          dir: ui/pages/rapid-response-react

      - name: Setup Foundry CLI
        uses: foundry-cli/setup-foundry-cli@9eb9a1fca2c2cfafb3e8c8ae07eaf58a94c7c5b8 # v1.0.0
        with:
          client_id: ${{ secrets.FALCON_CLIENT_ID }}
          client_secret: ${{ secrets.FALCON_CLIENT_SECRET }}

      - name: Prepare app manifest
        run: |
          # Create unique app name for this test run
          yq -i '.name = .name + "-${{ github.actor }}-" + "'$(date +"%Y%m%d%H%M")'"' manifest.yml
          APP_NAME=$(yq '.name' manifest.yml)
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
          echo "Deploying app: $APP_NAME"

      - name: Deploy app to Foundry
        run: |
          foundry apps deploy --change-type=major
          echo "App deployed successfully"

      - name: Install Playwright browsers
        working-directory: e2e
        run: |
          npm install
          npx playwright install --with-deps chromium

      - name: Run E2E tests
        working-directory: e2e
        env:
          APP_NAME: ${{ env.APP_NAME }}
          FALCON_BASE_URL: https://falcon.us-2.crowdstrike.com
          FALCON_USERNAME: ${{ secrets.FALCON_USERNAME }}
          FALCON_PASSWORD: ${{ secrets.FALCON_PASSWORD }}
          FALCON_AUTH_SECRET: ${{ secrets.FALCON_AUTH_SECRET }}
          CI: true
        run: npm test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: playwright-results
          path: |
            e2e/test-results/
            e2e/playwright-report/
          retention-days: 7

      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: test-screenshots
          path: e2e/test-results/*.png
          retention-days: 7

      - name: Delete app from Falcon
        if: always()
        run: |
          echo "Deleting app: $APP_NAME"
          foundry apps delete -f || echo "App deletion failed, may already be deleted"
